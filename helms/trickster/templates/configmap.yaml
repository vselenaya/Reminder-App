apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    {{- include "trickster.labels" . | nindent 4 }}
  name: {{ template "trickster.fullname" . }}
data:
  trickster.conf: |-
    [main]
    {{- if .Values.configHandlerPath }}
    config_handler_path = {{ .Values.configHandlerPath | quote }}
    {{- end }}
    {{- if .Values.pingHandlerPath }}
    ping_handler_path = {{ .Values.pingHandlerPath | quote }}
    {{- end }}
    {{- if .Values.healthHandlerPath }}
    health_handler_path = {{ .Values.healthHandlerPath | quote }}
    {{- end }}
    {{- if .pprofServer }}
    pprof_server = {{ .pprofServer | quote }}
    {{- end }}
    {{- if .serverName }}
    server_name = {{ .serverName | quote }}
    {{- end }}

    [frontend]
    listen_port = {{ .Values.service.servicePort }}
    {{- if .Values.frontend }}
      {{- if .Values.frontend.listenAddress }}
    listen_address = {{ .Values.frontend.listenAddress | quote }}
      {{- end }}
      {{- if .Values.frontend.tlsListenPort }}
    tls_listen_port = {{ .Values.frontend.tlsListenPort }}
      {{- end }}
      {{- if .Values.frontend.tlsListenAddress }}
    tls_listen_address = {{ .Values.frontend.tlsListenAddress | quote }}
      {{- end }}
      {{- if .Values.frontend.connectionsLimit }}
    connections_limit = {{ .Values.frontend.connectionsLimit }}
      {{- end }}
    {{- end }}
    {{- if .Values.caches }}
    {{- if gt (len .Values.caches) 0 }}

    [caches]
      {{- range $key, $cache := .Values.caches }}

      {{ printf "[caches.%s]" $cache.name }}
        {{- if $cache.cacheType }}
      cache_type = {{ $cache.cacheType | quote }}
        {{- end }}
        {{- if and (ne $cache.cacheType "redis") (ne $cache.cacheType "badger") }}
        {{- if $cache.index }}
        {{ printf "[caches.%s.index]" $cache.name }}
        {{- if $cache.index.reapIntervalSecs }}
        reap_interval_secs = {{ $cache.index.reapIntervalSecs }}
        {{- end }}
        {{- if $cache.index.flushIntervalSecs }}
        flush_interval_secs = {{ $cache.index.flushIntervalSecs }}
        {{- end }}
        {{- if $cache.index.maxSizeBytes }}
        max_size_bytes = {{ $cache.index.maxSizeBytes }}
        {{- end }}
        {{- if $cache.index.maxSizeBackoffBytes }}
        max_size_backoff_bytes = {{ $cache.index.maxSizeBackoffBytes }}
        {{- end }}
        {{- if $cache.index.maxSizeObjects }}
        max_size_objects = {{ $cache.index.maxSizeObjects }}
        {{- end }}
        {{- if $cache.index.maxSizeBackoffObjects }}
        max_size_backoff_objects = {{ $cache.index.maxSizeBackoffObjects }}
        {{- end }}
        {{- end }}
        {{- end }}
        {{- if and (eq $cache.cacheType "redis") ( .redis ) }}

        {{ printf "[caches.%s.redis]" $cache.name }}
          {{- if $cache.redis.clientType }}
        client_type = {{ $cache.redis.clientType | quote }}
          {{- end }}
          {{- if $cache.redis.protocol }}
        protocol = {{ $cache.redis.protocol | quote }}
          {{- end }}
          {{- if $cache.redis.password }}
        password = {{ $cache.redis.password | quote }}
          {{- end }}
          {{- if or (eq $cache.redis.clientType "cluster") (eq $cache.redis.clientType "sentinel") }}
            {{- if $cache.redis.endpoints }}
        endpoints = [ '{{- join "', '" $cache.redis.endpoints }}' ]
            {{- end }}
            {{- if eq $cache.redis.clientType "sentinel" }}
              {{- if $cache.redis.sentinelMaster }}
        sentinel_master = {{ $cache.redis.sentinelMaster | quote }}
              {{- end }}
            {{- end }}
          {{- else }}
            {{- if $cache.redis.endpoint }}
        endpoint = {{ $cache.redis.endpoint | quote }}
            {{- end }}
          {{- end }}
          {{- if $cache.redis.db }}
        db = {{ $cache.redis.db }}
          {{- end }}
          {{- if $cache.redis.maxRetries }}
        max_retries = {{ $cache.redis.maxRetries }}
          {{- end }}
          {{- if $cache.redis.minRetryBackoffMs }}
        min_retry_backoff_ms = {{ $cache.redis.minRetryBackoffMs }}
          {{- end }}
          {{- if $cache.redis.maxRetyBackoffMs }}
        max_retry_backoff_ms = {{ $cache.redis.maxRetyBackoffMs }}
          {{- end }}
          {{- if $cache.redis.dialTimeoutMs }}
        dial_timeout_ms = {{ $cache.redis.dialTimeoutMs }}
          {{- end }}
          {{- if $cache.redis.readTimeoutMs }}
        read_timeout_ms = {{ $cache.redis.readTimeoutMs }}
          {{- end }}
          {{- if $cache.redis.writeTimeoutMs }}
        write_timeout_ms = {{ $cache.redis.writeTimeoutMs }}
          {{- end }}
          {{- if $cache.redis.poolSize }}
        pool_size = {{ $cache.redis.poolSize }}
          {{- end }}
          {{- if $cache.redis.minIdleConns }}
        min_idle_conns = {{ $cache.redis.minIdleConns }}
          {{- end }}
          {{- if $cache.redis.maxConnAgeMs }}
        max_conn_age_ms = {{ $cache.redis.maxConnAgeMs }}
          {{- end }}
          {{- if $cache.redis.poolTimeoutMs }}
        pool_timeout_ms = {{ $cache.redis.poolTimeoutMs }}
          {{- end }}
          {{- if $cache.redis.idleTimeoutMs }}
        idle_timeout_ms = {{ $cache.redis.idleTimeoutMs }}
          {{- end }}
          {{- if $cache.redis.idleCheckFrequencyMs }}
        idle_check_frequency_ms = {{ $cache.redis.idleCheckFrequencyMs }}
          {{- end }}

        {{- else if (eq $cache.cacheType "filesystem") }}
        {{ printf "[caches.%s.filesystem]" $cache.name }}
          {{- range $vName, $value := $.Values.volumes }}
          {{- if eq $vName $cache.volumeName }}
        cache_path = {{ printf "%s/%s/" $value.mountPath $cache.name }}
          {{- end }}
          {{- end }}

        {{- else if and (eq $cache.cacheType "bbolt") ( $cache.bbolt ) }}
        {{ printf "[caches.%s.bbolt]" $cache.name }}
          {{- range $vName, $value := $.Values.volumes }}
          {{- if eq $vName $cache.volumeName }}
        filename = {{ printf "%s/%s/%s" $value.mountPath $cache.name $cache.bbolt.file }}
          {{- end }}
          {{- end }}
          {{- if $cache.bbolt.bucket }}
        bucket = {{ $cache.bbolt.bucket | quote }}
          {{- end }}

        {{- else if and (eq $cache.cacheType "badger") ( $cache.badger ) }}
        {{ printf "[caches.%s.badger]" $cache.name }}
          {{- range $vName, $value := $.Values.volumes }}
          {{- if eq $vName $cache.volumeName }}
        directory = {{ printf "%s/%s/" $value.mountPath $cache.name }}
        value_directory = {{ printf "%s/" $value.mountPath }}
          {{- end }}
          {{- end }}
        {{- end }}

      {{- end }}
    {{- end }}
    {{- end }}
    {{- if .Values.origins }}
    {{- if gt (len .Values.origins) 0 }}

    [origins]
      {{- range .Values.origins }}
      {{- $origin := .name }}

      {{ printf "[origins.%s]" .name }}
        {{- if .originType }}
      origin_type = {{ .originType | quote }}
        {{- end }}
        {{- if .originURL }}
      origin_url = {{ .originURL | quote }}
        {{- end }}
        {{- if .hosts }}
      hosts = [ '{{- join "', '" .hosts }}' ]
        {{- end }}
        {{- if .isDefault }}
      is_default = {{ .isDefault }}
        {{- end }}
        {{- if .cacheName }}
      cache_name = {{ .cacheName | quote }}
        {{- end }}
        {{- if .cacheKeyPrefix }}
      cache_key_prefix = {{ .cacheKeyPrefix | quote }}
        {{- end }}
        {{- if .forwardedHeaders }}
      forwarded_headers = {{ .forwardedHeaders | quote }}
        {{- end }}
        {{- if .negativeCacheName }}
      negative_cache_name = {{ .negativeCacheName | quote }}
        {{- end }}
        {{- if .pathRoutingDisabled }}
      path_routing_disabled = {{ .pathRoutingDisabled | quote }}
        {{- end }}
        {{- if .ruleName }}
      rule_name = {{ .ruleName | quote }}
        {{- end }}
        {{- if .requestRewriterName }}
      req_rewriter_name = {{ .requestRewriterName | quote }}
        {{- end }}
        {{- if .tracingName }}
      tracing_name = {{ .tracingName | quote }}
        {{- end }}
        {{- if .dearticulateUpstreamRanges }}
      dearticulate_upstream_ranges = {{ .dearticulateUpstreamRanges }}
        {{- end }}
        {{- if .multipartRangesDisabled }}
      multipart_ranges_disabled = {{ .multipartRangesDisabled }}
        {{- end }}
        {{- if .compressableTypes }}
      compressable_types = [ '{{- join "', '" .compressableTypes }}' ]
        {{- end }}
        {{- if .timeoutSecs }}
      timeout_secs = {{ .timeoutSecs }}
        {{- end }}
        {{- if .keepAliveTimeoutSecs }}
      keep_alive_timeout_secs = {{ .keepAliveTimeoutSecs }}
        {{- end }}
        {{- if .maxIdleConns }}
      max_idle_conns = {{ .maxIdleConns }}
        {{- end }}
        {{- if .backfillToleranceSecs }}
      backfill_tolerance_secs = {{ .backfillToleranceSecs }}
        {{- end }}
        {{- if .timeseriesRetentionFactor }}
      timeseries_retention_factor = {{ .timeseriesRetentionFactor }}
        {{- end }}
        {{- if .timeseriesTTLSecs }}
      timeseries_ttl_secs = {{ .timeseriesTTLSecs }}
        {{- end }}
        {{- if .timeseriesEvictionMethod }}
      timeseries_eviction_method = {{ .timeseriesEvictionMethod | quote}}
        {{- end }}
        {{- if .fastForwardDisable }}
      fast_forward_disable = {{ .fastForwardDisable }}
        {{- end }}
        {{- if .fastforwardTTLSecs }}
      fastforward_ttl_secs = {{ .fastforwardTTLSecs }}
        {{- end }}
        {{- if .maxTTLSecs }}
      max_ttl_secs = {{ .maxTTLSecs }}
        {{- end }}
        {{- if .revalidationFactor }}
      revalidation_factor = {{ .revalidationFactor }}
        {{- end }}
        {{- if .maxObjectByteSize }}
      max_object_byte_size = {{ .maxObjectByteSize }}
        {{- end }}
        {{- if .hcUpstreamURL }}
      health_check_upstream_url = {{ .hcUpstreamURL | quote }}
        {{- end }}
        {{- if .hcVerb }}
      health_check_verb = {{ .hcVerb | quote }}
        {{- end }}
        {{- if .hcQuery }}
      health_check_query = {{ .hcQuery | quote }}
        {{- end }}
        {{- if .hcHeaders }}

        {{ printf "[origins.%s.paths.%s.health_check_headers]" $origin .name }}
          {{- range $key, $val := .hcHeaders }}
        {{ printf "'%s' = '%s'" $key $val }}
          {{- end }}
        {{- end }}
        {{- if .tls }}

        {{ printf "[origins.%s.tls]" .name }}
          {{- if .tls.fullChainCertPath }}
        full_chain_cert_path = {{ .tls.fullChainCertPath | quote }}
          {{- end }}
          {{- if .tls.privateKeyPath }}
        private_key_path = {{ .tls.privateKeyPath | quote }}
          {{- end }}
          {{- if .tls.insecureSkipVerify }}
        insecure_skip_verify = {{ .tls.insecureSkipVerify }}
          {{- end }}
          {{- if .tls.certificateAuthorityPaths }}
        certificate_authority_paths = [ '{{- join "', '" .tls.certificateAuthorityPaths }}' ]
          {{- end }}
          {{- if .tls.clientCertPath }}
        client_cert_path = {{ .tls.clientCertPath | quote }}
          {{- end }}
          {{- if .tls.clientKeyPath }}
        client_key_path = {{ .tls.clientKeyPath | quote }}
          {{- end }}
        {{- end }}
        {{- if (.paths) }}
        {{- if (gt (len .paths) 0) }}

        [paths]
          {{- range .paths }}

          {{ printf "[origins.%s.paths.%s]" $origin .name }}
            {{- if .path }}
          path = {{ .path | quote }}
            {{- end }}
            {{- if .methods }}
          methods = [ '{{- join "', '" .methods }}' ]
            {{- end }}
            {{- if .matchType }}
          match_type = {{ .matchType | quote }}
            {{- end }}
            {{- if .handler }}
          handler = {{ .handler | quote  }}
            {{- end }}
            {{- if .requestRewriterName }}
          req_rewriter_name = {{ .requestRewriterName | quote }}
            {{- end }}
            {{- if .responseCode }}
          response_code = {{ .responseCode }}
            {{- end }}
            {{- if .responseBody }}
          response_body = {{ .responseBody | quote }}
            {{- end }}
            {{- if .noMetrics }}
          no_metrics = {{ .noMetrics }}
            {{- end }}
            {{- if .collapsedForwarding }}
          collapsed_forwarding = {{ .collapsedForwarding | quote }}
            {{- end }}
            {{- if .cacheKeyParams }}
          cache_key_params = [ '{{- join "', '" .cacheKeyParams }}' ]
            {{- end }}
            {{- if .cacheKeyFormFields }}
          cache_key_form_fields = [ '{{- join "', '" .cacheKeyFormFields }}' ]
            {{- end }}
            {{- if .cacheKeyHeaders }}
          cache_key_headers = [ '{{- join "', '" .cacheKeyHeaders }}' ]
            {{- end }}
            {{- if .responseHeaders }}

            {{ printf "[origins.%s.paths.%s.response_headers]" $origin .name }}
              {{- range $key, $val := .responseHeaders }}
            {{ printf "'%s' = '%s'" $key $val }}
              {{- end }}
            {{- end }}
            {{- if .requestHeaders }}

            {{ printf "[origins.%s.paths.%s.request_headers]" $origin .name }}
              {{- range $key, $val := .requestHeaders }}
            {{ printf "'%s' = '%s'" $key $val }}
              {{- end }}
            {{- end }}
            {{- if .requestParams }}

            {{ printf "[origins.%s.paths.%s.request_params]" $origin .name }}
              {{- range $key, $val := .requestParams }}
            {{ printf "'%s' = '%s'" $key $val }}
              {{- end }}
            {{- end }}
          {{- end }}
        {{- end }}
        {{- end }}
      {{- end }}
    {{- end }}
    {{- end }}
    {{- if (.Values.negativeCaches) }}
    {{- if gt (len .Values.negativeCaches) 0 }}

    [negative_caches]
      {{- range .Values.negativeCaches }}
      
      {{ printf "[negative_caches.%s]" .name }}
        {{- range $key, $val := . }}
        {{- if not (eq $key "name") }}
      {{ printf "%s = %s" $key $val }}
        {{- end }}
        {{- end }}
      {{- end }}
    {{- end }}
    {{- end }}
    {{- if (.Values.rules) }}
      {{- if gt (len .Values.rules) 0 }}

    [rules]
        {{- range .Values.rules }}
          {{- $ruleName := .name }}
      {{ printf "[rules.%s]" .name }}
          {{- if .inputSource }}
      input_source = {{ .inputSource | quote }}
          {{- end }}
          {{- if .inputKey }}
      input_key = {{ .inputKey | quote }}
          {{- end }}
          {{- if .inputType }}
      input_type = {{ .inputType | quote }}
          {{- end }}
          {{- if .inputEncoding }}
      input_encoding = {{ .inputEncoding | quote }}
          {{- end }}
          {{- if .inputIndex }}
      input_index = {{ .inputIndex }}
          {{- end }}
          {{- if .inputDelimiter }}
      input_delimiter = {{ .inputDelimiter | quote }}
          {{- end }}
          {{- if .operation }}
      operation = {{ .operation | quote }}
          {{- end }}
          {{- if .operationArg }}
      operation_arg = {{ .operationArg | quote }}
          {{- end }}
          {{- if .nextRoute }}
      next_route = {{ .nextRoute | quote }}
          {{- end }}
          {{- if .redirectURL }}
      redirect_url = {{ .redirectURL | quote }}
          {{- end }}
          {{- if .ingressRequestRewriterName }}
      ingress_req_rewriter_name = {{ .ingressRequestRewriterName | quote }}
          {{- end }}
          {{- if .egressRequestRewriterName }}
      egress_req_rewriter_name = {{ .egressRequestRewriterName | quote }}
          {{- end }}
          {{- if .defaultRequestRewriterName }}
      default_req_rewriter_name = {{ .defaultRequestRewriterName | quote }}
          {{- end }}
          {{- if .maxRuleExecutions }}
      max_rule_executions = {{ .maxRuleExecutions | quote }}
          {{- end }}
          {{- if (.cases) }}
            {{- if gt (len .cases) 0 }}
      {{ printf "[rules.%s.cases]" .name }}
              {{- range .cases }}
        {{ printf "[rules.%s.cases.%s]" $ruleName .name }}
        matches = [ '{{- join "', '" .matches }}' ]
                {{- if .nextRoute }}
        next_route = {{ .nextRoute | quote }}
                {{- end }}
                {{- if .redirectURL }}
        redirect_url = {{ .redirectURL | quote }}
                {{- end }}
                {{- if .requestRewriterName }}
        req_rewriter_name = {{ .requestRewriterName | quote }}
                {{- end }}
              {{- end }}
            {{- end }}
          {{- end }}
        {{- end }}
      {{- end }}
    {{- end }}
    {{- if .Values.requestRewriters }}

    [request_rewriters]
      {{- range .Values.requestRewriters }}
      {{ printf "[request_rewriters.%s]" .name }}
      instructions = [
        {{- range .instructions }}
        [ '{{- join "', '" . }}' ],
        {{- end }}
      ]
      {{- end }}
    {{- end }}
    {{- if .Values.tracing }}

    [tracing]
      {{- range .Values.tracing }}
      {{ printf "[tracing.%s]" .name }}
        {{- if .tracerType }}
      tracer_type = {{ .tracerType | quote }}
        {{- end }}
        {{- if .serviceName }}
      service_name = {{ .serviceName | quote }}
        {{- end }}
        {{- if .collectorURL }}
      collector_url = {{ .collectorURL | quote }}
        {{- end }}
        {{- if .collectorUser }}
      collector_user = {{ .collectorUser | quote }}
        {{- end }}
        {{- if .collectorPass }}
      collector_pass = {{ .collectorPass | quote }}
        {{- end }}
        {{- if .sampleRate }}
      sample_rate = {{ .sampleRate }}
        {{- end }}
        {{- if .omitTags }}
      omit_tags = [ '{{- join "', '" .omitTags }}' ]
        {{- end }}
        {{- if .tags }}
      
        {{ printf "[tracing.%s.tags]" .name }}
          {{- range $key, $value := .tags }}
        {{ $key }} = {{ $value | quote }}
          {{- end }}
        {{- end }}
        {{- if .jaeger }}
      
        {{ printf "[tracing.%s.jaeger]" .name }}
          {{- if .endpointType }}
        endpoint_type = {{ .endpointType | quote }}
          {{- end }}
        {{- end }}
        {{- if .stdout }}
      
        {{ printf "[tracing.%s.stdout]" .name }}
          {{- if .prettyPrint }}
        pretty_print = {{ .prettyPrint }}
          {{- end }}
        {{- end }}

      {{- end }}
    {{- end }}

    {{- if .Values.service.metricsPort }}

    [metrics]
    listen_port = {{ .Values.service.metricsPort }}
      {{- if .Values.metrics }}
      {{- if .Values.metrics.listenAddress }}
    listen_address = {{ .Values.metrics.listenAddress }}
      {{- end }}
      {{- end }}
    {{- end }}
    {{- if .Values.reloading }}

    [reloading]
      {{- if .Values.reloading.listenPort }}
    listen_port = {{ .Values.reloading.listenPort }}
      {{- end }}
      {{- if .Values.reloading.listenAddress }}
    listen_address = {{ .Values.reloading.listenAddress | quote }}
      {{- end }}
      {{- if .Values.reloading.handlerPath }}
    handler_path = {{ .Values.reloading.handlerPath | quote }}
      {{- end }}
      {{- if .Values.reloading.drainTimeoutSecs }}
    drain_timeout_secs = {{ .Values.reloading.drainTimeoutSecs }}
      {{- end }}
      {{- if .Values.reloading.rateLimitSecs }}
    rate_limit_secs = {{ .Values.reloading.rateLimitSecs }}
      {{- end }}
    {{- end }}
    {{- if .Values.logging }}

    [logging]
      {{- if .Values.logging.logLevel }}
    log_level = {{ .Values.logging.logLevel | quote }}
      {{- end }}
      {{- if .Values.logging.logFile }}
    log_file = {{ .Values.logging.logFile | quote }}
      {{- end }}
    {{- end }}
