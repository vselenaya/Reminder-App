apiVersion: v1
kind: Service
metadata:
{{- if or .Values.service.annotations .Values.prometheusScrape }}
  annotations:
  {{- if .Values.service.annotations }}
{{ toYaml .Values.service.annotations | indent 4 }}
  {{- end }}
  {{- if .Values.prometheusScrape }}
    prometheus.io/scrape: {{ .Values.prometheusScrape | quote }}
    prometheus.io/port: {{ .Values.service.metricsPort | quote }}
    prometheus.io/path: /metrics
  {{- end }}
{{- end }}
  name: {{ template "trickster.fullname" . }}
  labels:
    {{- include "trickster.labels" . | nindent 4 }}
{{- if .Values.service.labels }}
{{ toYaml .Values.service.labels | indent 4 }}
{{- end }}
  name: {{ template "trickster.fullname" . }}
spec:
{{- if .Values.service.clusterIP }}
  clusterIP: {{ .Values.service.clusterIP }}
{{- end }}
{{- if .Values.service.externalIPs }}
  externalIPs:
{{ toYaml .Values.service.externalIPs | indent 4 }}
{{- end }}
{{- if .Values.service.loadBalancerIP }}
  loadBalancerIP: {{ .Values.service.loadBalancerIP }}
{{- end }}
{{- if .Values.service.loadBalancerSourceRanges }}
  loadBalancerSourceRanges:
  {{- range $cidr := .Values.service.loadBalancerSourceRanges }}
    - {{ $cidr }}
  {{- end }}
{{- end }}
  ports:
    - name: http
      port: {{ .Values.service.servicePort }}
      protocol: TCP
      targetPort: http
    {{- if .Values.service.nodePort }}
      nodePort: {{ .Values.service.nodePort }}
    {{- end }}
    - name: http-metrics
      port: {{ .Values.service.metricsPort }}
      protocol: TCP
      targetPort: metrics
    {{- if .Values.service.metricsNodePort }}
      nodePort: {{ .Values.service.metricsNodePort }}
    {{- end }}
  selector:
    {{- include "trickster.matchLabels" . | nindent 4 }}
  type: "{{ .Values.service.type }}"