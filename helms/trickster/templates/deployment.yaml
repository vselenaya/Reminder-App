apiVersion: apps/v1
kind: Deployment
metadata:
{{- if .Values.deploymentAnnotations }}
  annotations:
{{ toYaml .Values.deploymentAnnotations | indent 4 }}
{{- end }}
  labels:
    {{- include "trickster.labels" . | nindent 4 }}
  name: {{ template "trickster.fullname" . }}
spec:
  selector:
    matchLabels:
      {{- include "trickster.matchLabels" . | nindent 6 }}
  replicas: {{ .Values.replicaCount }}
  {{- if .Values.strategy }}
  strategy:
{{ toYaml .Values.strategy | indent 4 }}
  {{- end }}
  template:
    metadata:
      annotations:
        checksum/trickster-cfg: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    {{- if .Values.podAnnotations }}        
{{ toYaml .Values.podAnnotations | indent 8 }}
    {{- end }}    
      labels:
        {{- include "trickster.labels" . | nindent 8 }}
    spec:
{{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
{{- end }}
{{- if .Values.schedulerName }}
      schedulerName: "{{ .Values.schedulerName }}"
{{- end }}
{{- if .Values.priorityClassName }}
      priorityClassName: "{{ .Values.priorityClassName }}"
{{- end }}    
      containers:
        - name: {{ template "trickster.name" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if .Values.extraEnv }}
          env:
            {{- range $key, $value := .Values.extraEnv }}
            - name: {{ $key }}
              value: {{ $value }}
            {{- end }}
        {{- end }}
        {{- if .Values.extraArgs }}
          args:
          {{- range $key, $value := .Values.extraArgs }}
            - --{{ $key }}={{ $value }}
          {{- end }}
        {{- end }}
          volumeMounts:
            - name: cfg-volume
              mountPath: /etc/trickster
          {{- range $key, $value := .Values.volumes }}
          {{- range $.Values.caches }}
          {{- if eq .volumeName $key }}
            - name: cache-volume-{{ $key }}
              mountPath: {{ $value.mountPath }}
              subPath: {{ .name }}
          {{- end }}
          {{- end }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.servicePort }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.service.metricsPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /trickster/ping
              port: http
          readinessProbe:
            httpGet:
              path: /trickster/ping
              port: http
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      {{ toYaml .Values.imagePullSecrets | indent 2 }}
    {{- end }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.securityContext }}
      securityContext:
{{ toYaml .Values.securityContext | indent 8 }}
    {{- end }}
    {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
    {{- end }}
    {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
    {{- end }}
      volumes:
        - name: cfg-volume
          configMap:
            name: {{ template "trickster.fullname" . }}
            items:
              - key: trickster.conf
                path: trickster.conf
      {{- range $key, $value := .Values.volumes }}
      {{- if $value.enabled }}
        - name: cache-volume-{{ $key }}
        {{- if eq $value.type "persistentVolume" }}
          persistentVolumeClaim:
            claimName: {{ if .existingClaim }}{{ .existingClaim }}{{- else }}{{-  printf "trickster-%s-claim" $key -}}{{- end }}
        {{- else }}
          emptyDir: {}
        {{- end }}
      {{- end }}
      {{- end }}
